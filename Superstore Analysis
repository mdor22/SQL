# This project uses the following superstore data: 

CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);

# Use a SELECT statement to order the items by price.

SELECT item_name, price
FROM superstore
ORDER BY price;

# Write SQL queries to statistics about the item prices:

# The sum of all prices in the superstore.
SELECT SUM(price)
FROM superstore;

# The sum of prices per item category.
SELECT SUM(price), category
FROM superstore
GROUP BY category;

# The average price of an item in the superstore.
SELECT AVG(price)
FROM superstore;

# The average price of items per category.
SELECT AVG(price), category
FROM superstore
GROUP BY category;

# The cheapest item in the superstore.
SELECT MIN(price), item_name
FROM superstore;

# The most expensive item in the superstore.
SELECT MAX(price), item_name
FROM superstore;

# The number of unique products per item category.
SELECT COUNT(item_id), category
FROM superstore
GROUP BY category;

# The most expensive item in the category of 'Kitchen Supplies'.
SELECT MAX(price), item_name
FROM superstore
WHERE category = 'Kitchen Supplies';

# Other questions about the data and the SQL queries that answer them.

# Which category has an item with the lowest average rating?
SELECT MIN(average_rating), category
FROM superstore;

# The stock quantities per item.
SELECT stock_quantity, item_name
FROM superstore
GROUP BY item_name;

# The sum of stock quantities per category.
SELECT SUM(stock_quantity), category
FROM superstore
GROUP BY category;
